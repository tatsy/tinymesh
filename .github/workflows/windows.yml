name: Windows CI

on:
  push:
    branches:
      - master
      - dev
    tags:
      - v*

env:
  BUILD_TYPE: Release

jobs:
  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Set up Python version
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry config virtualenvs.path ~/.local/share/virtualenvs

      - name: Cache Poetry
        uses: actions/cache@v3
        id: poetry-cache
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-poetry-${{ hashFiles('**/pyproject.toml') }}

      - name: Install Google Test
        run: |
          git clone https://github.com/google/googletest.git --depth 1
          cd googletest
          mkdir build
          cd build
          cmake .. `
            -G "Visual Studio 17 2022" -A x64 `
            -Dgtest_force_shared_crt=ON `
            -DCMAKE_INSTALL_PREFIX="C:/Program Files/GoogleTest/"
          cmake --build . --config "$env:BUILD_TYPE"
          cmake --build . --config "$env:BUILD_TYPE" --target INSTALL

      - name: CMake build
        run: |
          cmake -E make_directory ${{ runner.workspace }}/build
          cd ${{ runner.workspace }}/build
          cmake "$env:GITHUB_WORKSPACE" `
            -G "Visual Studio 17 2022" -A x64 `
            -DGoogleTest_DIR="C:/Program Files/GoogleTest" `
            -DBUILD_TESTS=ON `
            -DBUILD_EXAMPLES=ON
          cmake --build . --config "$env:BUILD_TYPE"

      - name: Unit test
        working-directory: ${{ runner.workspace }}/build
        shell: bash
        run: ctest -C $BUILD_TYPE

      - name: Install Python modules
        if: steps.pipenv-cache.outputs.cache-hit != 'true'
        run: |
          poetry install

      - name: Python module test
        run: |
          poetry run pytest -s tests
